{"version":3,"sources":["./src/app/subreddit/subreddit.service.ts","./src/app/auth/user-component/user-component.component.ts","./src/app/auth/user-component/user-component.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/shared/subreddit-side-bar/subreddit-side-bar.component.ts","./src/app/shared/subreddit-side-bar/subreddit-side-bar.component.html","./src/app/shared/post.service.ts","./src/app/post/view-post/view-post.component.ts","./src/app/post/view-post/view-post.component.html","./src/app/shared/vote.service.ts","./src/app/subreddit/list-subreddits/list-subreddits.component.ts","./src/app/subreddit/list-subreddits/list-subreddits.component.html","./src/app/token-interceptor.ts","./src/app/subreddit/create-subreddit/create-subreddit.component.ts","./src/app/subreddit/create-subreddit/create-subreddit.component.html","./src/app/auth/auth.guard.ts","./src/app/shared/vote-button/vote-type.ts","./src/app/auth/sign-up/sign-up.component.ts","./src/app/auth/sign-up/sign-up.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/shared/auth.service.ts","./src/app/app.module.ts","./src/app/shared/vote-button/vote-button.component.ts","./src/app/shared/vote-button/vote-button.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/shared/post-tile/post-tile.component.ts","./src/app/shared/post-tile/post-tile.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/comment/comment.service.ts","./src/app/post/create-post/create-post.component.ts","./src/app/post/create-post/create-post.component.html","./src/app/app-routing.module.ts","./src/app/shared/side-bar/side-bar.component.ts","./src/app/shared/side-bar/side-bar.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SubredditModel } from './subreddit.response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubredditService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllSubreddits(): Observable<Array<SubredditModel>>{\n    return this.http.get<Array<SubredditModel>>('http://localhost:8080/api/subreddit');\n  }\n\n  createSubreddit(subredditModel: SubredditModel): Observable<SubredditModel>{\n    return this.http.post<SubredditModel>('http://localhost:8080/api/subreddit',subredditModel);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from 'src/app/shared/post.service';\nimport { CommentPayload } from 'src/app/comment/comment.payload';\nimport { CommentService } from 'src/app/comment/comment.service';\nimport { PostModel } from 'src/app/shared/post.model';\n\n@Component({\n  selector: 'app-user-component',\n  templateUrl: './user-component.component.html',\n  styleUrls: ['./user-component.component.css']\n})\nexport class UserComponentComponent implements OnInit {\n\n  name: string;\n  posts: PostModel[];\n  comments: CommentPayload[];\n  postLength: number;\n  commentLength: number;\n\n  constructor(private activatedRoute: ActivatedRoute, private postService: PostService,\n    private commentService: CommentService) {\n    this.name = this.activatedRoute.snapshot.params.name;\n\n    this.postService.getAllPostsByUser(this.name).subscribe(data => {\n      this.posts = data;\n      this.postLength = data.length;\n    });\n    this.commentService.getAllCommentsByUser(this.name).subscribe(data => {\n      this.comments = data;\n      this.commentLength = data.length;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div style=\"margin-top:20px\">\n    Welcome <b>{{name}}</b>.<br /> You have posted <b>{{postLength}}</b> time(s) and commented\n    <b>{{commentLength}}</b> time(s).\n    You can check your post and comment history below.\n  </div>\n  <hr />\n  <div>\n    Your Posts:\n  </div>\n  <app-post-tile [posts]=\"posts\"></app-post-tile>\n  <hr />\n  <div>\n    Your Comments:\n  </div>\n  <div *ngFor=\"let comment of comments\">\n    <div class=\"comment\">\n      <div class=\"username\">\n        <a routerLink=\"/user/comment.username\">{{comment.userName}}</a>\n      </div>\n      <div>\n        <p>{{comment.duration}}</p>\n      </div>\n      <b>{{comment.text}}</b>\n    </div>\n    <hr />\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostModel } from '../shared/post.model';\nimport { PostService } from '../shared/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  posts: Array<PostModel> = [];\n\n  constructor(private postService: PostService) {\n    this.postService.getAllPosts().subscribe(post => {\n      this.posts = post;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"reddit-body\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <hr />\n      <div class=\"col-md-9\">\n        <app-post-tile [posts]=\"posts\"></app-post-tile>\n      </div>\n      <div class=\"col-md-3\">\n        <app-side-bar></app-side-bar>\n        <app-subreddit-side-bar></app-subreddit-side-bar>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { SubredditModel } from 'src/app/subreddit/subreddit.response';\nimport { SubredditService } from 'src/app/subreddit/subreddit.service';\n\n@Component({\n  selector: 'app-subreddit-side-bar',\n  templateUrl: './subreddit-side-bar.component.html',\n  styleUrls: ['./subreddit-side-bar.component.css']\n})\nexport class SubredditSideBarComponent implements OnInit {\n\n  subreddits: Array<SubredditModel> = [];\n  displayViewAll: boolean;\n\n  constructor(private subredditService: SubredditService) {\n    this.subredditService.getAllSubreddits().subscribe(data => {\n      if (data.length > 3) {\n        this.subreddits = data.splice(0, 3);\n        this.displayViewAll = true;\n      } else {\n        this.subreddits = data;\n      }\n    });\n  }\n\n  ngOnInit(): void { }\n\n}\n","<div class=\"sidebar-view-subreddit\">\n  <div style=\"color: black; font-weight: bold\">Browse Subreddits</div>\n  <hr />\n  <span *ngFor=\"let subreddit of subreddits\">\n      <span class=\"subreddit-text\"><a href=\"/view-subreddit/{{subreddit.id}}\">{{subreddit.name}}</a></span>\n      <hr />\n  </span>\n  <div style=\"text-align: center\" *ngIf=\"displayViewAll\">\n      <a style=\"font-weight: bold\" routerLink=\"/list-subreddits\">View All</a>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CreatePostPayload } from '../post/create-post/create-post.payload';\nimport { PostModel } from './post.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllPosts(): Observable<Array<PostModel>>{\n    return this.http.get<PostModel[]>('http://localhost:8080/api/posts/');\n  }\n\n  getPost(id:number): Observable<PostModel>{\n    return this.http.get<PostModel>('http://localhost:8080/api/posts/'+id);\n  }\n\n  getAllPostsByUser(name: string): Observable<PostModel[]>{\n    return this.http.get<PostModel[]>('http://localhost:8080/api/posts/by-username/'+name);\n  }\n\n  createPost(postPayload: CreatePostPayload): Observable<any> {\n    return this.http.post('http://localhost:8080/api/posts/', postPayload);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { CommentPayload } from 'src/app/comment/comment.payload';\nimport { CommentService } from 'src/app/comment/comment.service';\nimport { PostModel } from 'src/app/shared/post.model';\nimport { PostService } from 'src/app/shared/post.service';\n\n@Component({\n  selector: 'app-view-post',\n  templateUrl: './view-post.component.html',\n  styleUrls: ['./view-post.component.css']\n})\nexport class ViewPostComponent implements OnInit {\n\n  postId: number;\n  post: PostModel;\n  commentForm: FormGroup;\n  commentPayload: CommentPayload;\n  comments: CommentPayload[];\n\n  constructor(private postService: PostService, private activateRoute: ActivatedRoute,\n    private commentService: CommentService, private router: Router) {\n    this.postId = this.activateRoute.snapshot.params.id;\n\n    this.commentForm = new FormGroup({\n      text: new FormControl('', Validators.required)\n    });\n    this.commentPayload = {\n      text: '',\n      postId: this.postId\n    };\n  }\n\n  ngOnInit(): void {\n    this.getPostById();\n    this.getCommentsForPost();\n  }\n\n  postComment() {\n    this.commentPayload.text = this.commentForm.get('text').value;\n    this.commentService.postComment(this.commentPayload).subscribe(data => {\n      this.commentForm.get('text').setValue('');\n      this.getCommentsForPost();\n    }, error => {\n      throwError(error);\n    })\n  }\n\n  private getPostById() {\n    this.postService.getPost(this.postId).subscribe(data => {\n      this.post = data;\n    }, error => {\n      throwError(error);\n    });\n  }\n\n  private getCommentsForPost() {\n    this.commentService.getAllCommentsForPost(this.postId).subscribe(data => {\n      this.comments = data;\n    }, error => {\n      throwError(error);\n    });\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <hr />\n    <div class=\"col-md-9\">\n      <div class=\"row post\">\n        <div class=\"col-md-1\">\n          <app-vote-button [post]=\"post\"></app-vote-button>\n        </div>\n        <div class=\"col-md-11\">\n          <span>\n            <span class=\"subreddit-text\"><a class=\"post-url\" href=\"\">{{post.subredditName}}</a></span>\n            <span> . Posted\n              <span> {{post.duration}} </span>\n              by\n              <a class=\"username\" href=\"\">{{post.userName}}</a>\n            </span>\n          </span>\n          <hr />\n          <a routerLink=\"post.url\" class=\"post-title\">{{post.postName}}</a>\n          <div>\n            <p class=\"post-text\" [innerHtml]=\"post.description\"></p>\n          </div>\n          <div class=\"post-comment\">\n            <form [formGroup]=\"commentForm\" (ngSubmit)=\"postComment()\">\n              <div class=\"form-group\">\n                <textarea class=\"form-control\" [formControlName]=\"'text'\" placeholder=\"Your Thoughts?\"></textarea>\n              </div>\n              <button type=\"submit\" class=\"login float-right\">Comment</button>\n            </form>\n          </div>\n          <div style=\"margin-top: 60px;\" *ngFor=\"let comment of comments\">\n            <div class=\"comment\">\n              <div class=\"username\">\n                <a routerLink=\"/user/comment.username\">{{comment.userName}}</a>\n              </div>\n              <div>\n                <p>{{comment.duration}}</p>\n              </div>\n              <b>{{comment.text}}</b>\n            </div>\n            <hr />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-3\">\n      <app-side-bar></app-side-bar>\n      <app-subreddit-side-bar></app-subreddit-side-bar>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { VotePayload } from './vote-button/vote.payload';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoteService {\n\n  constructor(private http: HttpClient) { }\n\n  vote(votePayload: VotePayload): Observable<any> {\n    return this.http.post('http://localhost:8080/api/votes/', votePayload);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { SubredditModel } from '../subreddit.response';\nimport { SubredditService } from '../subreddit.service';\n\n@Component({\n  selector: 'app-list-subreddits',\n  templateUrl: './list-subreddits.component.html',\n  styleUrls: ['./list-subreddits.component.css']\n})\nexport class ListSubredditsComponent implements OnInit {\n\n  subreddits: Array<SubredditModel>;\n  constructor(private subredditService: SubredditService) { }\n\n  ngOnInit() {\n    this.subredditService.getAllSubreddits().subscribe(data => {\n      this.subreddits = data;\n    }, error => {\n      throwError(error);\n    })\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <hr />\n    <div class=\"col-md-9\">\n      <h2>List of Subreddits</h2>\n      <ul>\n        <li *ngFor=\"let subreddit of subreddits\">\n            <a routerLink=\"/view-subreddit/{{subreddit.id}}\">{{subreddit.name}}</a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"col-md-3\">\n      <app-side-bar></app-side-bar>\n    </div>\n  </div>\n</div>\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject, Observable, throwError } from \"rxjs\";\r\nimport { catchError, filter, switchMap, take } from \"rxjs/operators\";\r\nimport { LoginResponse } from \"./auth/login/login-response.payload\";\r\nimport { AuthService } from \"./auth/shared/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    isTokenRefreshing = false;\r\n    refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject(null);\r\n\r\n    constructor(public authService: AuthService){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n      if(req.url.indexOf('refresh') !== -1 || req.url.indexOf('login') !== -1){\r\n        return next.handle(req);\r\n      }\r\n\r\n      const jwtToken = this.authService.getJwtToken();\r\n\r\n      if(jwtToken){\r\n        return next.handle(this.addToken(req,jwtToken)).pipe(catchError(error => {\r\n          if(error instanceof HttpErrorResponse && error.status === 403){\r\n            return this.handleAuthErrors(req,next);\r\n          } else {\r\n            return throwError(error);\r\n          }\r\n        }))\r\n      }\r\n      return next.handle(req);\r\n    }\r\n\r\n    private handleAuthErrors(req: HttpRequest<any>, next: HttpHandler)\r\n        : Observable<HttpEvent<any>> {\r\n        if (!this.isTokenRefreshing) {\r\n            this.isTokenRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n\r\n            return this.authService.refreshToken().pipe(\r\n                switchMap((refreshTokenResponse: LoginResponse) => {\r\n                    this.isTokenRefreshing = false;\r\n                    this.refreshTokenSubject\r\n                        .next(refreshTokenResponse.authenticationToken);\r\n                    return next.handle(this.addToken(req,\r\n                        refreshTokenResponse.authenticationToken));\r\n                })\r\n            )\r\n        } else {\r\n            return this.refreshTokenSubject.pipe(\r\n                filter(result => result !== null),\r\n                take(1),\r\n                switchMap((res) => {\r\n                    return next.handle(this.addToken(req,\r\n                        this.authService.getJwtToken()))\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    addToken(req: HttpRequest<any>, jwtToken: any) {\r\n        return req.clone({\r\n            headers: req.headers.set('Authorization',\r\n                'Bearer ' + jwtToken)\r\n        });\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs';\nimport { error } from 'selenium-webdriver';\nimport { SubredditModel } from '../subreddit.response';\nimport { SubredditService } from '../subreddit.service';\n\n@Component({\n  selector: 'app-create-subreddit',\n  templateUrl: './create-subreddit.component.html',\n  styleUrls: ['./create-subreddit.component.css']\n})\nexport class CreateSubredditComponent implements OnInit {\n\n  createSubredditForm: FormGroup;\n  subredditModel: SubredditModel;\n  title = new FormControl('');\n  description = new FormControl('');\n\n  constructor(private router: Router, private subredditService: SubredditService) {\n     this.createSubredditForm = new FormGroup({\n       title: new FormControl('', Validators.required),\n       description: new FormControl('', Validators.required)\n     });\n     this.subredditModel = {\n       name:'',\n       description:''\n     }\n   }\n\n  ngOnInit(): void {\n  }\n\n  discard(){\n    this.router.navigateByUrl('/');\n  }\n\n  createSubreddit(){\n    this.subredditModel.name = this.createSubredditForm.get('title').value;\n    this.subredditModel.description = this.createSubredditForm.get('description').value;\n    this.subredditService.createSubreddit(this.subredditModel).subscribe(data => {\n      this.router.navigateByUrl('/list-subreddits');\n    }, error => {\n      throwError(error);\n    });\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"create-subreddit-container\">\n      <form class=\"post-form\" [formGroup]=\"createSubredditForm\" (ngSubmit)=\"createSubreddit()\">\n        <div class=\"form-group\">\n          <div class=\"create-subreddit-heading\">Create Subreddit</div>\n          <hr />\n          <input type=\"text\" [formControlName]=\"'title'\" class=\"form-control\" style=\"margin-top: 5px\"\n            placeholder=\"Title\">\n          <textarea type=\"text\" [formControlName]=\"'description'\" style=\"width: 100%; margin-top: 5px\"\n            placeholder=\"Description\"></textarea>\n          <div>\n            <div style=\"margin-top: 5px\" class=\"float-right\">\n              <button (click)=\"discard()\" class=\"btnDiscard\">Discard</button>\n              <button class=\"btnCreateSubreddit\">Create</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"col-md-3\">\n      <div class=\"sidebar\">\n        <h5 class=\"guidelines\">Posting to Spring Reddit</h5>\n        <hr />\n        <ul>\n          <li>Remember the human</li>\n          <hr />\n          <li>Behave like you would in real life</li>\n          <hr />\n          <li>Don't spam</li>\n          <hr />\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './shared/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    const isAuthenticated = this.authService.isLoggedIn();\n    if (isAuthenticated) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/login');\n    }\n    return true;\n  }\n\n}\n","export enum VoteType {\r\n  UPVOTE,\r\n  DOWNVOTE\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../shared/auth.service';\nimport { SignupRequestPayload } from './signup-request.payload';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  signupRequestPayload: SignupRequestPayload;\n  signupForm: FormGroup;\n\n  constructor(private authService: AuthService, private router: Router, private toastr: ToastrService) {\n    this.signupRequestPayload = {\n      username: '',\n      email: '',\n      password: ''\n    };\n   }\n\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      username: new FormControl('',Validators.required),\n      email: new FormControl('',[Validators.email, Validators.required]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  signup() {\n    this.signupRequestPayload.username = this.signupForm.get('username').value;\n    this.signupRequestPayload.email = this.signupForm.get('email').value;\n    this.signupRequestPayload.password = this.signupForm.get('password').value;\n\n    this.authService.signup(this.signupRequestPayload)\n    .subscribe(() => {\n      this.router.navigate(['/login'], { queryParams: { registered:true }});\n    }, () => {\n      this.toastr.error('Registration Failed! Please try again');\n    });\n  }\n\n}\n","<div class=\"register-section\">\n  <div class=\"row justify-content-center\">\n      <div class=\"col-md-3\"></div>\n      <div class=\"col-md-8\">\n          <div class=\"card text-center\" style=\"margin-top: 10px; width: 500px;\" >\n              <div class=\"card-body\" >\n                <h4>Sign Up</h4>\n                <br>\n                  <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\n                      <div class=\"form-group row\">\n                          <div class=\"col-md-2\"></div>\n                          <div class=\"col-md-8\">\n                              <input type=\"text\" [formControlName]=\"'email'\" id=\"email_address\" class=\"form-control\" name=\"email-address\" required\n                                  autofocus placeholder=\"EMAIL\">\n                              <span *ngIf=\"!signupForm.get('email').valid && signupForm.get('email').touched\">\n                                  Please provide a valid email\n                              </span>\n                          </div>\n                      </div>\n\n                      <div class=\"form-group row\">\n                         <div class=\"col-md-2\"></div>\n                          <div class=\"col-md-8\">\n                              <input type=\"text\" [formControlName]=\"'username'\"class=\"form-control\" required autofocus placeholder=\"USERNAME\">\n                              <span *ngIf=\"!signupForm.get('username').valid && signupForm.get('username').touched\">\n                                  Please provide a valid username\n                              </span>\n                          </div>\n                      </div>\n\n                      <div class=\"form-group row\">\n                         <div class=\"col-md-2\"></div>\n                          <div class=\"col-md-8\">\n                              <input type=\"password\" [formControlName]=\"'password'\" id=\"password\" class=\"form-control\" name=\"password\" required placeholder=\"PASSWORD\">\n                              <span *ngIf=\"!signupForm.get('password').valid && signupForm.get('password').touched\">\n                                  Please provide a valid Password\n                              </span>\n                          </div>\n                      </div>\n\n                      <div class=\"form-group row\">\n                        <div class=\"col-md-2\"></div>\n                      <div class=\"col-md-8\">\n                          <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block rounded-pill sign-up\" style=\"width: 300px; height: 40px;\">\n                              Sign Up\n                          </button>\n                        </div>\n                      </div>\n                      <div class=\"form-group row\">\n                        <div class=\"col-md-2\"></div>\n                      <div class=\"col-md-8\">\n                          <span style=\"padding-left: 15px\">Existing user? <a routerLink=\"/login\"style=\"color: #0079d3;cursor: pointer;\"><b>LOG IN</b></a></span>\n                      </div>\n                      </div>\n                  </form>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-md-3\"></div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'redditclone-angular-app';\n\n}\n","<app-header></app-header>\n<div class=\"container-fluid\">\n  <div class=\"row\" >\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Observable, throwError } from 'rxjs';\nimport { LoginRequestPayload } from '../login/login-request.payload';\nimport { LoginResponse } from '../login/login-response.payload';\nimport { SignupRequestPayload } from '../sign-up/signup-request.payload';\nimport { map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  @Output() loggedIn: EventEmitter<boolean> = new EventEmitter();\n  @Output() username: EventEmitter<string> = new EventEmitter();\n\n  refreshTokenPayload = {\n    refreshToken: this.getRefreshToken(),\n    username: this.getUserName()\n  }\n\n  constructor(private http: HttpClient, private localStorageService: LocalStorageService) { }\n\n  signup(signupRequestPayload:SignupRequestPayload): Observable<any>{\n    return this.http.post('http://localhost:8080/api/auth/signup', signupRequestPayload);\n  }\n\n  login(loginRequestPaload: LoginRequestPayload): Observable<any>{\n    return this.http.post<LoginResponse>('http://localhost:8080/api/auth/login', loginRequestPaload)\n          .pipe(map(data => {\n            this.localStorageService.store('authenticationToken', data.authenticationToken);\n            this.localStorageService.store('username', data.username);\n            this.localStorageService.store('refreshToken', data.refreshToken);\n            this.localStorageService.store('expiresAt', data.expiresAt);\n\n            this.loggedIn.emit(true);\n            this.username.emit(data.username);\n            return true;\n          }));\n  }\n\n  getJwtToken(){\n    return this.localStorageService.retrieve('authenticationToken');\n  }\n\n  refreshToken(){\n    return this.http.post<LoginResponse>('http://localhost:8080/api/auth/refresh/token', this.refreshTokenPayload)\n    .pipe(tap(response => {\n      this.localStorageService.clear('authenticationToken');\n      this.localStorageService.clear('expiresAt');\n\n      this.localStorageService.store('authenticationToken', response.authenticationToken);\n      this.localStorageService.store('expiresAt', response.expiresAt);\n    }));\n  }\n\n  logout(){\n    this.http.post('http://localhost:8080/api/auth/logout', this.refreshTokenPayload,\n      { responseType: 'text' })\n      .subscribe(data => {\n        console.log(data);\n      }, error => {\n        throwError(error);\n      })\n    this.localStorageService.clear('authenticationToken');\n    this.localStorageService.clear('username');\n    this.localStorageService.clear('refreshToken');\n    this.localStorageService.clear('expiresAt');\n  }\n\n  getUserName(){\n    return this.localStorageService.retrieve('username');\n  }\n\n  getRefreshToken(){\n    return this.localStorageService.retrieve('refreshToken');\n  }\n\n  isLoggedIn(): boolean {\n    return this.getJwtToken() != null;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { TokenInterceptor } from './token-interceptor';\nimport { HomeComponent } from './home/home.component';\nimport { PostTileComponent } from './shared/post-tile/post-tile.component';\nimport { SideBarComponent } from './shared/side-bar/side-bar.component';\nimport { SubredditSideBarComponent } from './shared/subreddit-side-bar/subreddit-side-bar.component';\nimport { VoteButtonComponent } from './shared/vote-button/vote-button.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ListSubredditsComponent } from './subreddit/list-subreddits/list-subreddits.component';\nimport { CreateSubredditComponent } from './subreddit/create-subreddit/create-subreddit.component';\nimport { CreatePostComponent } from './post/create-post/create-post.component';\nimport { ViewPostComponent } from './post/view-post/view-post.component';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { UserComponentComponent } from './auth/user-component/user-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SignUpComponent,\n    LoginComponent,\n    HomeComponent,\n    PostTileComponent,\n    SideBarComponent,\n    SubredditSideBarComponent,\n    VoteButtonComponent,\n    ListSubredditsComponent,\n    CreateSubredditComponent,\n    CreatePostComponent,\n    ViewPostComponent,\n    UserComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxWebstorageModule.forRoot(),\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    FontAwesomeModule,\n    EditorModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { faArrowDown, faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { AuthService } from 'src/app/auth/shared/auth.service';\nimport { PostModel } from '../post.model';\nimport { PostService } from '../post.service';\nimport { VoteService } from '../vote.service';\nimport { VoteType } from './vote-type';\nimport { VotePayload } from './vote.payload';\n\n@Component({\n  selector: 'app-vote-button',\n  templateUrl: './vote-button.component.html',\n  styleUrls: ['./vote-button.component.css']\n})\nexport class VoteButtonComponent implements OnInit {\n\n  @Input() post: PostModel;\n  votePayload: VotePayload;\n  faArrowUp = faArrowUp;\n  faArrowDown = faArrowDown;\n  upvoteColor: string;\n  downvoteColor: string;\n  isLoggedIn: boolean;\n\n  constructor(private voteService: VoteService,\n    private authService: AuthService,\n    private postService: PostService, private toastr: ToastrService) {\n\n    this.votePayload = {\n      voteType: undefined,\n      postId: undefined\n    }\n    this.authService.loggedIn.subscribe((data: boolean) => this.isLoggedIn = data);\n  }\n\n  ngOnInit(): void {\n    this.updateVoteDetails();\n  }\n\n  upvotePost() {\n    this.votePayload.voteType = VoteType.UPVOTE;\n    this.vote();\n    this.downvoteColor = '';\n  }\n\n  downvotePost() {\n    this.votePayload.voteType = VoteType.DOWNVOTE;\n    this.vote();\n    this.upvoteColor = '';\n  }\n\n  private vote() {\n    this.votePayload.postId = this.post.id;\n    this.voteService.vote(this.votePayload).subscribe(() => {\n      this.updateVoteDetails();\n    }, error => {\n      this.toastr.error(error.error.message);\n      throwError(error);\n    });\n  }\n\n  private updateVoteDetails() {\n    this.postService.getPost(this.post.id).subscribe(post => {\n      this.post = post;\n    });\n  }\n\n}\n","<div class=\"col-md-1\">\n  <div class=\"d-flex flex-column votebox\">\n  <div class=\"p-2\">\n      <fa-icon (click)=\"upvotePost()\" class=\"upvote\" [icon]=\"faArrowUp\" [style.color]=\"post.upVote ? 'green':''\">\n      </fa-icon>\n  </div>\n  <div class=\"p-2 votecount\">{{post.voteCount}}</div>\n  <div class=\"p-2\">\n      <fa-icon (click)=\"downvotePost()\" class=\"downvote\" [icon]=\"faArrowDown\" [style.color]=\"post.downVote ? 'red':''\">\n      </fa-icon>\n  </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../shared/auth.service';\nimport { LoginRequestPayload } from './login-request.payload';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loginRequestPayload: LoginRequestPayload;\n  registerSuccessMessage: string;\n  isError: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n    this.loginRequestPayload ={\n      username:'',\n      password:''\n    };\n   }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('',Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n\n    this.activatedRoute.queryParams.subscribe(param => {\n      if(param.registered !== undefined && param.registered === 'true' ){\n        this.toastr.success('Signup Successful');\n        this.registerSuccessMessage = 'Please Check you inbox for activation email and activate you account before login';\n      }\n    })\n  }\n\n  login() {\n    this.loginRequestPayload.username = this.loginForm.get('username').value;\n    this.loginRequestPayload.password = this.loginForm.get('password').value;\n\n    this.authService.login(this.loginRequestPayload).subscribe(data => {\n      if(data){\n        this.isError = false;\n        this.router.navigateByUrl('/');\n        this.toastr.success('Login Successfull');\n      }\n      else{\n        this.isError = true;\n      }\n    });\n  }\n}\n","<div class=\"login-section\">\n  <div class=\"row justify-content-center\">\n      <div class=\"col-md-3\"></div>\n      <div class=\"col-md-8\">\n          <div class=\"card text-center\" style=\"margin-top: 10px; width: 500px; \">\n              <div class=\"card-body\">\n                <h4>Login</h4>\n                <br>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                   <div class=\"form-group row\">\n                     <div class=\"col-md-2\"></div>\n                        <div class=\"col-md-8\">\n                              <input type=\"text\"\n                                     id=\"user_name\"\n                                     class=\"form-control\"\n                                     [formControlName]=\"'username'\"\n                                     name=\"user_name\"\n                                     required\n                                     autofocus\n                                     placeholder=\"USERNAME\"\n                              >\n                              <span *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').touched\">\n                                 Please provide a valid username\n                              </span>\n                          </div>\n                      </div>\n\n                      <div class=\"form-group row\">\n                        <div class=\"col-md-2\"></div>\n                          <div class=\"col-md-8\">\n                              <input type=\"password\" id=\"password\" class=\"form-control\" [formControlName]=\"'password'\" name=\"password\" required placeholder=\"PASSWORD\">\n                              <span *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').touched\">\n                                Password cannot be empty\n                              </span>\n                          </div>\n                      </div>\n                      <div class=\"form-group row\">\n                        <div class=\"col-md-2\"></div>\n                      <div class=\"col-md-8\">\n                          <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block rounded-pill login\" style=\"width: 300px; height: 40px;\">\n                              Login\n                          </button>\n                      </div>\n                      </div>\n                      <div class=\"form-group row\">\n                        <div class=\"col-md-2\"></div>\n                      <div class=\"col-md-8\">\n                        <span>New to Reddit? <a routerLink=\"/signup\" style=\"color: #0079d3;cursor: pointer;\"><b>SIGN UP</b></a></span>\n                      </div>\n                      </div>\n                      <div class=\"login-failed\" *ngIf='this.isError'>\n                           <p class=\"login-failed-text\">Login Failed. Please check your credentials and try again.</p>\n                      </div>\n                      <div class=\"login-failed\" [ngStyle]=\"{'background-color': 'green'}\" *ngIf=\"this.registerSuccessMessage.length > 0\">\n                          <p class=\"register-success-text\">{{registerSuccessMessage}}</p>\n                     </div>\n                  </form>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-md-3\"></div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport { PostModel } from '../post.model';\n\n@Component({\n  selector: 'app-post-tile',\n  templateUrl: './post-tile.component.html',\n  styleUrls: ['./post-tile.component.css']\n})\nexport class PostTileComponent implements OnInit {\n\n  faComments = faComments;\n  @Input() posts: PostModel[];\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToPost(id: number): void {\n    this.router.navigateByUrl('/view-post/' + id);\n  }\n\n}\n","<div class=\"row post\" *ngFor=\"let post of posts\">\n  <app-vote-button [post]=\"post\"></app-vote-button>\n  <!-- Section to Display Post Information-->\n  <div class=\"col-md-11\">\n    <span class=\"subreddit-info\">\n      <span class=\"subreddit-text\"><a class=\"posturl\" routerLink=\"\">{{post.subredditName}}</a></span>\n      <span> . Posted by <a class=\"username\" routerLink=\"/user/{{post.userName}}\">{{post.userName}}</a></span>\n      <span> . {{post.duration}}</span>\n    </span>\n    <hr />\n    <div class=\"post-title\">\n      <a class=\"postname\" href=\"{{post.url}}\">{{post.postName}}</a>\n    </div>\n    <div>\n      <p class=\"post-text\" [innerHtml]=\"post.description\"></p>\n    </div>\n    <hr />\n    <span>\n      <a class=\"btnCommments\" role=\"button\">\n        <fa-icon [icon]=\"faComments\"></fa-icon>\n        Comments({{post.commentCount}})\n      </a>\n      <button class=\"login\" (click)=\"goToPost(post.id)\">\n        Read Post\n      </button>\n    </span>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faUser, faSun, faMoon, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from '../auth/shared/auth.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  faUser = faUser;\n  faMoon = faMoon;\n  faSun = faSun;\n  faCog = faCog;\n  isLoggedIn: boolean;\n  username: string;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.loggedIn.subscribe((data: boolean) => this.isLoggedIn = data);\n    this.authService.username.subscribe((data: string) => this.username = data);\n    this.isLoggedIn = this.authService.isLoggedIn();\n    this.username = this.authService.getUserName();\n  }\n\n  goToUserProfile() {\n    this.router.navigateByUrl('/user-profile/' + this.username);\n  }\n\n  logout() {\n    this.authService.logout();\n    this.isLoggedIn = false;\n    this.router.navigateByUrl('');\n  }\n}\n","<header>\n  <nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n      <div class=\"flex-grow-1\">\n          <a aria-label=\"Home\" class=\"logo\" routerLink=\"/\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" class=\"reddit-icon-svg\">\n                  <g>\n                      <circle fill=\"#FF4500\" cx=\"10\" cy=\"10\" r=\"10\"></circle>\n                      <path fill=\"#FFF\"\n                          d=\"M16.67,10A1.46,1.46,0,0,0,14.2,9a7.12,7.12,0,0,0-3.85-1.23L11,4.65,13.14,5.1a1,1,0,1,0,.13-0.61L10.82,4a0.31,0.31,0,0,0-.37.24L9.71,7.71a7.14,7.14,0,0,0-3.9,1.23A1.46,1.46,0,1,0,4.2,11.33a2.87,2.87,0,0,0,0,.44c0,2.24,2.61,4.06,5.83,4.06s5.83-1.82,5.83-4.06a2.87,2.87,0,0,0,0-.44A1.46,1.46,0,0,0,16.67,10Zm-10,1a1,1,0,1,1,1,1A1,1,0,0,1,6.67,11Zm5.81,2.75a3.84,3.84,0,0,1-2.47.77,3.84,3.84,0,0,1-2.47-.77,0.27,0.27,0,0,1,.38-0.38A3.27,3.27,0,0,0,10,14a3.28,3.28,0,0,0,2.09-.61A0.27,0.27,0,1,1,12.48,13.79Zm-0.18-1.71a1,1,0,1,1,1-1A1,1,0,0,1,12.29,12.08Z\">\n                      </path>\n                  </g>\n              </svg>\n              <svg class=\"reddit-icon-svg\" viewBox=\"0 0 57 18\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g fill=\"#1c1c1c\">\n                 <path\n                d=\"M54.63,16.52V7.68h1a1,1,0,0,0,1.09-1V6.65a1,1,0,0,0-.93-1.12H54.63V3.88a1.23,1.23,0,0,0-1.12-1.23,1.2,1.2,0,0,0-1.27,1.11V5.55h-1a1,1,0,0,0-1.09,1v.07a1,1,0,0,0,.93,1.12h1.13v8.81a1.19,1.19,0,0,0,1.19,1.19h0a1.19,1.19,0,0,0,1.25-1.12A.17.17,0,0,0,54.63,16.52Z\"></path><circle fill=\"#FF4500\" cx=\"47.26\" cy=\"3.44\" r=\"2.12\"></circle><path d=\"M48.44,7.81a1.19,1.19,0,1,0-2.38,0h0v8.71a1.19,1.19,0,0,0,2.38,0Z\"></path><path d=\"M30.84,1.19A1.19,1.19,0,0,0,29.65,0h0a1.19,1.19,0,0,0-1.19,1.19V6.51a4.11,4.11,0,0,0-3-1.21c-3.1,0-5.69,2.85-5.69,6.35S22.28,18,25.42,18a4.26,4.26,0,0,0,3.1-1.23,1.17,1.17,0,0,0,1.47.8,1.2,1.2,0,0,0,.85-1.05ZM25.41,15.64c-1.83,0-3.32-1.77-3.32-4s1.48-4,3.32-4,3.31,1.78,3.31,4-1.47,3.95-3.3,3.95Z\"></path><path d=\"M43.28,1.19A1.19,1.19,0,0,0,42.09,0h0a1.18,1.18,0,0,0-1.18,1.19h0V6.51a4.15,4.15,0,0,0-3-1.21c-3.1,0-5.69,2.85-5.69,6.35S34.72,18,37.86,18A4.26,4.26,0,0,0,41,16.77a1.17,1.17,0,0,0,1.47.8,1.19,1.19,0,0,0,.85-1.05ZM37.85,15.64c-1.83,0-3.31-1.77-3.31-4s1.47-4,3.31-4,3.31,1.78,3.31,4-1.47,3.95-3.3,3.95Z\"></path><path d=\"M17.27,12.44a1.49,1.49,0,0,0,1.59-1.38v-.15a4.81,4.81,0,0,0-.1-.85A5.83,5.83,0,0,0,13.25,5.3c-3.1,0-5.69,2.85-5.69,6.35S10.11,18,13.25,18a5.66,5.66,0,0,0,4.39-1.84,1.23,1.23,0,0,0-.08-1.74l-.11-.09a1.29,1.29,0,0,0-1.58.17,3.91,3.91,0,0,1-2.62,1.12A3.54,3.54,0,0,1,10,12.44h7.27Zm-4-4.76a3.41,3.41,0,0,1,3.09,2.64H10.14A3.41,3.41,0,0,1,13.24,7.68Z\"></path><path d=\"M7.68,6.53a1.19,1.19,0,0,0-1-1.18A4.56,4.56,0,0,0,2.39,6.91V6.75A1.2,1.2,0,0,0,0,6.75v9.77a1.23,1.23,0,0,0,1.12,1.24,1.19,1.19,0,0,0,1.26-1.1.66.66,0,0,0,0-.14v-5A3.62,3.62,0,0,1,5.81,7.7a4.87,4.87,0,0,1,.54,0h.24A1.18,1.18,0,0,0,7.68,6.53Z\">\n                 </path>\n                </g>\n              </svg>\n          </a>\n      </div>\n      <div class=\"flex-grow-1 float-right\">\n          <div *ngIf=\"isLoggedIn\" ngbDropdown class=\"float-right\">\n              <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n                  <button (click)=\"goToUserProfile()\" ngbDropdownItem>Profile</button>\n                  <button (click)=\"logout()\" ngbDropdownItem>Logout</button>\n              </div>\n              <button class=\"userdetails\" id=\"dropdownBasic1\" ngbDropdownToggle>\n                  <img class=\"account-icon\" src=\"https://www.redditstatic.com/avatars/avatar_default_08_D4E815.png\">\n                  {{username}}\n              </button>\n          </div>\n          <div *ngIf=\"!isLoggedIn\">\n              <a routerLink=\"/signup\" class=\"float-right rounded-pill sign-up mr-2\">Sign up</a>\n              <a routerLink=\"/login\" class=\"float-right rounded-pill login mr-2\">Login</a>\n          </div>\n      </div>\n\n  </nav>\n</header>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { CommentPayload } from './comment.payload';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllCommentsForPost(postId: number): Observable<CommentPayload[]> {\n    return this.httpClient.get<CommentPayload[]>('http://localhost:8080/api/comments/by-post/' + postId);\n  }\n\n  postComment(commentPayload: CommentPayload): Observable<any> {\n    return this.httpClient.post<any>('http://localhost:8080/api/comments/', commentPayload);\n  }\n\n  getAllCommentsByUser(name: string) {\n    return this.httpClient.get<CommentPayload[]>('http://localhost:8080/api/comments/by-user/' + name);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { error } from 'selenium-webdriver';\nimport { PostService } from 'src/app/shared/post.service';\nimport { SubredditModel } from 'src/app/subreddit/subreddit.response';\nimport { SubredditService } from 'src/app/subreddit/subreddit.service';\nimport { CreatePostPayload } from './create-post.payload';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  createPostForm: FormGroup;\n  postPayload: CreatePostPayload;\n  subreddits: Array<SubredditModel>;\n\n  constructor(\n    private router: Router,\n    private postService: PostService,\n    private subredditService: SubredditService\n  ){\n    this.postPayload = {\n      postName:'',\n      url:'',\n      subredditName:'',\n      description:''\n    }\n  }\n\n  ngOnInit(){\n    this.createPostForm = new FormGroup({\n      postName: new FormControl('', Validators.required),\n      subredditName: new FormControl('', Validators.required),\n      url: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required)\n    });\n    this.subredditService.getAllSubreddits().subscribe((data) => {\n      this.subreddits = data;\n    }, error => {\n      throwError(error);\n    });\n  }\n\n  createPost(){\n    this.postPayload.postName = this.createPostForm.get('postName').value;\n    this.postPayload.subredditName = this.createPostForm.get('subredditName').value;\n    this.postPayload.url = this.createPostForm.get('url').value;\n    this.postPayload.description = this.createPostForm.get('description').value;\n\n    this.postService.createPost(this.postPayload).subscribe((data) => {\n      this.router.navigateByUrl('/');\n    }, error => {\n      throwError(error);\n    });\n  }\n\n  discardPost(){\n    this.router.navigateByUrl('/');\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <hr />\n    <div class=\"col-1\"></div>\n    <div class=\"create-post-container col-10\">\n      <form class=\"post-form\" [formGroup]=\"createPostForm\" (ngSubmit)=\"createPost()\">\n        <div class=\"form-group\">\n          <div class=\"create-post-heading\">Create Post</div>\n          <hr />\n          <input type=\"text\" [formControlName]=\"'postName'\" class=\"form-control\" style=\"margin-top: 5px\"\n            placeholder=\"Title\">\n\n          <input type=\"text\" class=\"form-control\" [formControlName]=\"'url'\" style=\"margin-top: 5px\" placeholder=\"URL\">\n\n          <select class=\"form-control\" style=\"margin-top: 10px\" [formControlName]=\"'subredditName'\">\n            <option value=\"\" selected disabled>Select Subreddit</option>\n            <option *ngFor=\"let subreddit of subreddits\">{{subreddit.name}}</option>\n          </select>\n\n          <editor [formControlName]=\"'description'\" [init]=\"{\n                      height: 500,\n                      menubar: false,\n                      plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount'\n                      ],\n                      toolbar:\n                        'undo redo | formatselect | bold italic backcolor | \\\n                        alignleft aligncenter alignright alignjustify | \\\n                        bullist numlist outdent indent | removeformat | help'\n                    }\"></editor>\n          <span>\n            <div style=\"margin-top: 5px\" class=\"float-right\">\n              <button (click)=\"discardPost()\" class=\"btnDiscard\">Discard</button>\n              <button class=\"btnCreatePost\">Post</button>\n            </div>\n          </span>\n        </div>\n      </form>\n    </div>\n    <div class=\"col-1\"></div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { LoginComponent } from './auth/login/login.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { UserComponentComponent } from './auth/user-component/user-component.component';\nimport { HomeComponent } from './home/home.component';\nimport { CreatePostComponent } from './post/create-post/create-post.component';\nimport { ViewPostComponent } from './post/view-post/view-post.component';\nimport { CreateSubredditComponent } from './subreddit/create-subreddit/create-subreddit.component';\nimport { ListSubredditsComponent } from './subreddit/list-subreddits/list-subreddits.component';\n\nconst routes: Routes = [\n  { path:'', component:HomeComponent},\n  { path: 'view-post/:id', component: ViewPostComponent },\n  { path: 'user-profile/:name', component: UserComponentComponent, canActivate: [AuthGuard]},\n  { path: 'list-subreddits', component: ListSubredditsComponent },\n  { path: 'create-post', component: CreatePostComponent, canActivate: [AuthGuard]},\n  { path: 'create-subreddit', component: CreateSubredditComponent, canActivate: [AuthGuard]},\n  { path:'signup', component:SignUpComponent},\n  { path: 'login', component:LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  goToCreatePost() {\n    this.router.navigateByUrl('/create-post');\n  }\n\n  goToCreateSubreddit() {\n    this.router.navigateByUrl('/create-subreddit');\n  }\n}\n","<div class=\"sidebar\">\n  <img src=\"https://www.redditstatic.com/desktop2x/img/id-cards/home-banner@2x.png\">\n  <div style=\"text-align: center; font-size: 1em\">Welcome to Spring Reddit Clone home page. Come here to\n      check in with your favorite subreddits.</div>\n  <div style=\"text-align: center\">\n      <button class=\"btnCreatePost\" (click)=\"goToCreatePost()\">Create Post</button>\n  </div>\n  <div style=\"text-align: center\">\n      <button class=\"btnCreateSubreddit\" (click)=\"goToCreateSubreddit()\">Create Subreddit</button>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}